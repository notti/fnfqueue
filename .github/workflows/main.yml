name: build

on:
  push:
    branches: [master]
    tags:
      - '*'

jobs:
  build:
    runs-on: ubuntu-latest

    strategy:
      fail-fast: true
      matrix:
        python-version: ["3.8", "3.9", "3.10", "3.11"]

    steps:
    - uses: actions/checkout@v3
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v4
      with:
        python-version: ${{ matrix.python-version }}
    - name: Install dependencies
      run: python -m pip install --upgrade pip dpkt
    - name: Install package
      run: python -m pip install .
    - name: setup nfqueue
      run: sudo iptables -A INPUT -j NFQUEUE -i lo --dst 127.0.0.2 --queue-num 1
    - name: run tests
      working-directory: test
      run: |
        sudo `which python` ping_test.py
        sudo `which python` flood_test.py short
        sudo `which python` close_test.py short
  deploy:
    runs-on: ubuntu-latest
    container:
      image: quay.io/pypa/manylinux_2_28_x86_64
    needs: build
    if: startsWith(github.ref, 'refs/tags')
    steps:
    - name: Checkout source
      uses: actions/checkout@v3
    - name: build wheels
      run: |
        for BIN in /opt/python/*/bin; do
          "${BIN}/pip" wheel . --no-deps -w dist/
        done
    - name: fixup tags
      run: |
        for WHL in dist/*whl; do
          auditwheel repair -w dist/ "${WHL}"
          rm "${WHL}"
        done
    - name: build source release
      run: $(ls -1d /opt/python/cp* | sort -t'p' -r -n -k4 | head -n1)/bin/python -m build -s
    - name: Publish distribution ðŸ“¦ to PyPI
      uses: pypa/gh-action-pypi-publish@release/v1
      with:
        password: ${{ secrets.PYPI_API_TOKEN }}